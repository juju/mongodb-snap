name: juju-db
version: '4.4.24'
summary: MongoDB object/document oriented database used internally by Juju.
description: |
  MongoDB object/document oriented database used internally by Juju.
confinement: strict
grade: stable
base: core20
license: SSPL-1.0

apps:
  daemon:
    command: commands/daemon.start
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    plugs:
      - network-bind
      - network-observe
      - system-observe
      - mount-observe

  logrotate:
    command: usr/sbin/logrotate --verbose --state $SNAP_COMMON/logrotate.state $SNAP/etc/logrotate-juju-db.conf
    daemon: simple
    restart-condition: on-failure
    timer: 00:00

  mongod:
    command: bin/mongod
    plugs:
      - network
      - network-bind
      - network-observe
      - system-observe
      - mount-observe

  mongo:
    command: bin/mongo
    plugs:
      - network

  # Tools
  mongodump:
    command: bin/mongodump
    plugs:
      - network
      - home

  mongorestore:
    command: bin/mongorestore
    plugs:
      - network
      - home

  mongostat:
    command: bin/mongostat
    plugs:
      - network

  mongotop:
    command: bin/mongotop
    plugs:
      - network

parts:
  wrappers:
    plugin: dump
    source: snap/local/
    source-type: local

  mongo-tools:
    source: https://github.com/mongodb/mongo-tools
    source-type: git
    source-tag: "100.6.1"
    plugin: go
    build-packages:
      - pkg-config
      - libssl-dev
      - libpcap0.8-dev
      - libsasl2-dev
      - libkrb5-dev
    stage-packages:
      - libssl1.1
      - libpcap0.8
      - libsasl2-2
    go-channel: 1.19/stable
    override-build: |
      export GOROOT=/snap/go/current
      export GOPATH=$(realpath ..)
      ./make build
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      mongo_tools="mongodump mongorestore mongotop mongostat"
      for tool in ${mongo_tools}; do
          echo "Processing ${tool}..."
          strip -s bin/$tool
          mv bin/$tool ${SNAPCRAFT_PART_INSTALL}/bin/
      done

  mongo:
    after: [mongo-tools]
    source: https://github.com/mongodb/mongo
    source-type: git
    source-tag: "r4.4.24"
    plugin: nil
    stage-packages:
      - libssl1.1
      - libcurl4
      - libstemmer0d
      - zlib1g
      - libsnappy1v5
      - libyaml-cpp0.6
      - libpcre3
      - libpcrecpp0v5
      - libboost-system1.71.0
      - libboost-iostreams1.71.0
      - libboost-filesystem1.71.0
      - libboost-program-options1.71.0
      - libgoogle-perftools4
    build-packages:
      # isn't available on s390x, only needed on the rest anyway.
      - try:
          - libgoogle-perftools-dev
      - libssl-dev
      - liblzma-dev
      - libcurl4-openssl-dev
      # python packages cribbed from deb, might need changed.
      - python-typing
      - python3-cheetah
      - python3-pip
      - python3-pkg-resources
      - python3-pymongo
      - python3-yaml
      - python3-psutil
      # I think these and some of the above will be needed as staging packages too (for when its installed and being run).
      # - python-requests
      # - python-subprocess32
      # Package from deb, note scons arg above.
      - libstemmer-dev
      - zlib1g-dev
      - libsnappy-dev
      - libyaml-cpp-dev
      - libpcre3-dev
      - libboost-iostreams-dev
      # packages from the mongodb wiki/doc
      - build-essential
      - libboost-log-dev
      - libboost-filesystem-dev
      - libboost-program-options-dev
      - libboost-system-dev
      - libboost-thread-dev
      # required packages
      - valgrind

    override-build: |
      update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      # don't care: --server-js=off
      # Use system tcmalloc as it's more 'trusted' and would be updated by kernel/security team.
      SCONSFLAGS="--use-system-tcmalloc --disable-warnings-as-errors --use-system-pcre --use-system-snappy --use-system-zlib --use-system-valgrind --use-system-stemmer --use-system-yaml --ssl"
      arch=$(uname -m)
      if [ $arch = "aarch64" ]; then
          ccflags_arg="CCFLAGS=-march=armv8-a+crc"
      else
          ccflags_arg=""
      fi

      if [ $arch = "s390x" ]; then
          SCONSFLAGS="$SCONSFLAGS --allocator=system"
      else
          SCONSFLAGS="$SCONSFLAGS --allocator=tcmalloc"
      fi
      export SCONSFLAGS
      export DESTDIR=$SNAPCRAFT_PART_INSTALL

      python3 buildscripts/scons.py install-mongo install-mongod $ccflags_arg

      # Strip binaries down to a usable size.
      for file in $SNAPCRAFT_PART_BUILD/build/install/bin/mongo*;
          do strip -s $file;
      done
      mv $SNAPCRAFT_PART_BUILD/build/install/bin $SNAPCRAFT_PART_INSTALL/

  logrotate:
    plugin: dump
    source: logrotate
    source-type: local
    stage-packages:
      - logrotate
    override-build: |
      snapcraftctl build
      install --mode 0644 juju-db.conf ${SNAPCRAFT_PART_INSTALL}/etc/logrotate-juju-db.conf
